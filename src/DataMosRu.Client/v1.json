{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "API Портала открытых данных"
  },
  "host": "apidata.mos.ru",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Получение списка приложений",
        "description": "Получение приложений, зарегистрированных на портале открытых данных города Москвы",
        "operationId": "Apps_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<AppListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 104,
                    "caption": "ЖКХ Москвы",
                    "description": "Это приложение поможет найти ответы на многие вопросы, связанные с эксплуатацией и обслуживанием вашего дома. Информация о доме: планы по отключению горячей воды, cведения об оплате услуг ЖКХ; информация об управляющей компании; общая информация о доме. Справочная и правовая информация: общая информация о ЖКХ, ТСЖ и управляющих компаниях; контактная информация городских учреждений, ответственных за жилищный фонд Москвы; правовая информация Интерактивная карта поможет быстро найти: многофункциональные центры (МФЦ); органы исполнительной власти (ОИВ); платные парковки; остановки общественного транспорта.",
                    "categoryId": 2,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  },
                  {
                    "id": 106,
                    "caption": "Наш город",
                    "description": "Новая версия самого популярного городского приложения «Мобильная Приемная» получила новое название и дизайн! Сделать город лучше стало еще проще. Наглядный перечень категорий, удобное заполнение форм, мгновенная отправка сообщений – все это в приложении «Наш город»!\nНе вывозят вовремя мусор? Заметили яму на проезжей части? Не работает светофор? Укажите на проблему и она не останется без внимания города!",
                    "categoryId": 9,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  }
                ],
                "count": 2
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Получение списка приложений",
        "description": "Получение приложений, зарегистрированных на портале открытых данных города Москвы",
        "operationId": "Apps_GetListPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей, включённых в ответ",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<AppListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 104,
                    "caption": "ЖКХ Москвы",
                    "description": "Это приложение поможет найти ответы на многие вопросы, связанные с эксплуатацией и обслуживанием вашего дома. Информация о доме: планы по отключению горячей воды, cведения об оплате услуг ЖКХ; информация об управляющей компании; общая информация о доме. Справочная и правовая информация: общая информация о ЖКХ, ТСЖ и управляющих компаниях; контактная информация городских учреждений, ответственных за жилищный фонд Москвы; правовая информация Интерактивная карта поможет быстро найти: многофункциональные центры (МФЦ); органы исполнительной власти (ОИВ); платные парковки; остановки общественного транспорта.",
                    "categoryId": 2,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  },
                  {
                    "id": 106,
                    "caption": "Наш город",
                    "description": "Новая версия самого популярного городского приложения «Мобильная Приемная» получила новое название и дизайн! Сделать город лучше стало еще проще. Наглядный перечень категорий, удобное заполнение форм, мгновенная отправка сообщений – все это в приложении «Наш город»!\nНе вывозят вовремя мусор? Заметили яму на проезжей части? Не работает светофор? Укажите на проблему и она не останется без внимания города!",
                    "categoryId": 9,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  }
                ],
                "count": 2
              }
            }
          }
        }
      }
    },
    "/v1/categories/{categoryId}/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Получение списка приложений по идентификатору категории",
        "description": "Получение списка приложений, относящихся к заданной категории",
        "operationId": "Apps_GetListByCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<AppListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 104,
                    "caption": "ЖКХ Москвы",
                    "description": "Это приложение поможет найти ответы на многие вопросы, связанные с эксплуатацией и обслуживанием вашего дома. Информация о доме: планы по отключению горячей воды, cведения об оплате услуг ЖКХ; информация об управляющей компании; общая информация о доме. Справочная и правовая информация: общая информация о ЖКХ, ТСЖ и управляющих компаниях; контактная информация городских учреждений, ответственных за жилищный фонд Москвы; правовая информация Интерактивная карта поможет быстро найти: многофункциональные центры (МФЦ); органы исполнительной власти (ОИВ); платные парковки; остановки общественного транспорта.",
                    "categoryId": 2,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  },
                  {
                    "id": 106,
                    "caption": "Наш город",
                    "description": "Новая версия самого популярного городского приложения «Мобильная Приемная» получила новое название и дизайн! Сделать город лучше стало еще проще. Наглядный перечень категорий, удобное заполнение форм, мгновенная отправка сообщений – все это в приложении «Наш город»!\nНе вывозят вовремя мусор? Заметили яму на проезжей части? Не работает светофор? Укажите на проблему и она не останется без внимания города!",
                    "categoryId": 9,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  }
                ],
                "count": 2
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Получение списка приложений по идентификатору категории",
        "description": "Получение списка приложений, относящихся к заданной категории с добавлением проекции по полям",
        "operationId": "Apps_GetListByCategoryPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей, включённых в ответ запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<AppListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 104,
                    "caption": "ЖКХ Москвы",
                    "description": "Это приложение поможет найти ответы на многие вопросы, связанные с эксплуатацией и обслуживанием вашего дома. Информация о доме: планы по отключению горячей воды, cведения об оплате услуг ЖКХ; информация об управляющей компании; общая информация о доме. Справочная и правовая информация: общая информация о ЖКХ, ТСЖ и управляющих компаниях; контактная информация городских учреждений, ответственных за жилищный фонд Москвы; правовая информация Интерактивная карта поможет быстро найти: многофункциональные центры (МФЦ); органы исполнительной власти (ОИВ); платные парковки; остановки общественного транспорта.",
                    "categoryId": 2,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  },
                  {
                    "id": 106,
                    "caption": "Наш город",
                    "description": "Новая версия самого популярного городского приложения «Мобильная Приемная» получила новое название и дизайн! Сделать город лучше стало еще проще. Наглядный перечень категорий, удобное заполнение форм, мгновенная отправка сообщений – все это в приложении «Наш город»!\nНе вывозят вовремя мусор? Заметили яму на проезжей части? Не работает светофор? Укажите на проблему и она не останется без внимания города!",
                    "categoryId": 9,
                    "publishDate": "13.02.2013",
                    "developer": "Правительство Москвы"
                  }
                ],
                "count": 2
              }
            }
          }
        }
      }
    },
    "/v1/apps/{id}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Получение приложения по его идентификатору",
        "description": "Получение подробной информации о приложении по его идентификатору",
        "operationId": "Apps_GetItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор приложения",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationItem"
            },
            "examples": {
              "application/json": {
                "id": 104,
                "caption": "ЖКХ Москвы",
                "description": "Это приложение поможет найти ответы на многие вопросы, связанные с эксплуатацией и обслуживанием вашего дома. Информация о доме: - Планы по отключению горячей воды - Сведения об оплате услуг ЖКХ - Информация об управляющей компании - Общая информация о доме Справочная и правовая информация: - Общая информация о ЖКХ, ТСЖ и управляющих компаниях - Контактная информация городских учреждений, ответственных за жилищный фонд Москвы - Правовая информация Интерактивная карта поможет быстро найти: -\tМногофункциональные центры (МФЦ) -\tОрганы исполнительной власти (ОИВ) -\tПлатные парковки -\tОстановки общественного транспорта.",
                "categoryId": 2,
                "publishDate": "13.02.2013",
                "developer": "Правительство Москвы",
                "icon": ""
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Получение приложения по его идентификатору",
        "description": "Получение подробной информации о приложении по его идентификатору",
        "operationId": "Apps_GetItemPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор приложения",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей, возвращаемыхв ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationItem"
            },
            "examples": {
              "application/json": {
                "id": 104,
                "caption": "ЖКХ Москвы",
                "description": "Это приложение поможет найти ответы на многие вопросы, связанные с эксплуатацией и обслуживанием вашего дома. Информация о доме: - Планы по отключению горячей воды - Сведения об оплате услуг ЖКХ - Информация об управляющей компании - Общая информация о доме Справочная и правовая информация: - Общая информация о ЖКХ, ТСЖ и управляющих компаниях - Контактная информация городских учреждений, ответственных за жилищный фонд Москвы - Правовая информация Интерактивная карта поможет быстро найти: -\tМногофункциональные центры (МФЦ) -\tОрганы исполнительной власти (ОИВ) -\tПлатные парковки -\tОстановки общественного транспорта.",
                "categoryId": 2,
                "publishDate": "13.02.2013",
                "developer": "Правительство Москвы",
                "icon": ""
              }
            }
          }
        }
      }
    },
    "/v1/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Получение списка категорий",
        "description": "Получение категорий портала открытых данных города Москвы",
        "operationId": "Categories_GetCategoriesList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<CategoryListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 1,
                    "name": "Отдых",
                    "englishName": "Leisure",
                    "description": "",
                    "englishDescription": "",
                    "datasets": [
                      2202
                    ],
                    "services": []
                  },
                  {
                    "id": 2,
                    "name": "Жилищно-коммунальное хозяйство",
                    "englishName": "Housing & Community Amenities",
                    "description": "",
                    "englishDescription": "",
                    "datasets": [
                      651,
                      1062,
                      1537,
                      1539,
                      1129,
                      1131,
                      1124,
                      1126,
                      1533,
                      2661,
                      500,
                      1125,
                      1128,
                      1130,
                      1127,
                      499
                    ],
                    "services": [
                      104
                    ]
                  }
                ],
                "count": 2
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Получение списка категорий",
        "description": "Получение категорий портала открытых данных города Москвы",
        "operationId": "Categories_GetCategoriesListPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей, включённых в ответ запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<CategoryListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 1,
                    "name": "Отдых",
                    "englishName": "Leisure",
                    "description": "",
                    "englishDescription": "",
                    "datasets": [
                      2202
                    ],
                    "services": []
                  },
                  {
                    "id": 2,
                    "name": "Жилищно-коммунальное хозяйство",
                    "englishName": "Housing & Community Amenities",
                    "description": "",
                    "englishDescription": "",
                    "datasets": [
                      651,
                      1062,
                      1537,
                      1539,
                      1129,
                      1131,
                      1124,
                      1126,
                      1533,
                      2661,
                      500,
                      1125,
                      1128,
                      1130,
                      1127,
                      499
                    ],
                    "services": [
                      104
                    ]
                  }
                ],
                "count": 2
              }
            }
          }
        }
      }
    },
    "/v1/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Получение информации о категории",
        "description": "Получение информации о категории по её идентификатору",
        "operationId": "Categories_GetItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryItem"
            },
            "examples": {
              "application/json": {
                "id": 9,
                "name": "Органы государственной власти",
                "englishName": "Public Authorities",
                "description": "",
                "icon": "iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABk9JREFUeNrsXU1y2kgUbqa8R3MCk6rZozkB8m52KCcAnyC6gfEJECcwPkHEbnYWNxD7qYo4QeAEnn6ur8NLR1IEqNstWa9KZew0SPr6/Xzv6xYZvL6+it4utz96CHoA39VuLnnT17/+6WTcf/7v30HvgX0I9wD2APbWA9gDKO1RHnfyuJfHsVM05kzby+O2xritPA44FpJS5Iw2BfLH7KN6YF7Tg3waK4GbE4gSNB/gjVwFzxaAE3nENcYN5eFJwGKAHuLvhz4HChER0ZfH5jfjyNO+4HWM7uCA8P7QAA7hVVHN8TGA66swM1UY7mrkRD3k05JxR3j1qstVWNmUCoMEMZU/CZAp/r5DnvPhqZsK79ND+SDHhig2CeVQfE6Ez+oUgGRERzJ4GL2OJADrGu+j9/wtx2ZlA2hi8DKRYNIELLsIoMdu1qv7Jjk+ueQ8XexEAkvnyboKYGzjJPDYfdcA3Nr0DEbEOwMgdSSJrZOh4Nx3CcC97bYMFd4oiDaqMJHdkNEMYwYuSDyQgFuDuKdt98DYBnisYyHp7EEe3ySga4DZagDnFqN2rbWJM+TeVgNojdSiBUwsTphxAI8WyfMP0aJLAEZV/ashL6TCsbF1PpNVeEc0QibyEJVRCQmJhaJCHc/UBoCDS7a31dwbs0P+K1pQIv1uYVI0BaWZnum9Tu2NGYvy1TiS7UkXNFlgImFhOdQkgHt42iO8sQhgYyAiF8YFRa0VABJgpD5TEaFQpRz4SfyqKI9NNv10bnFSZXbIw40uUN00DNqYtW6HAo8IpMdF6IlTvnhuOJQDmkzkxjmK2dAlADe40G+gLjlL5h64mY/+1IomyCaOikmC60jRrQR4PXQhhFcAh0Jxy9c42EV/YeqIdWPXQRGyFKeFJydy4AjVdlmgfMS4aGG6qa8JnrInhPHKBQBz5L8j70ML9rTk4n0swHWtCkSOq6+piRxI4fmIilfVk74LgCoHYlJ9ps7Mm2AATdGYB3gct1lBFX6PEB7R9jiAxyf10ERL2RSAR/GrXL/SbsS3mfeILskjBzN4QR48gNi/AdgEiW+Kxqw572OzPWdUwTMJGD5/hJxXtLVjCBADVOGpKzlQaDmGXme0Z0XbA2MCOKXwxKLeJswh8h5N7HdXeKDAhiFfnNYklAaYaXSnqZy2wP6XF0aO6/a5QZMq0E1TN4WQ1WfUvxZATIynhV5RPx3BEzNRvQ4ywWfW3bttJYRDDaCDBuDxHCKNfvWpoM8upVLQ8tbIh99/cwrVXj65UoUjdoOkRMeY5Vulgug0BqFIN5xzCgQFW7+xDGrOpgL0HOmEJu+5xjWnzoSwFgprBupRzzkAKGRJ/16BW+B5P0g4xoQoHBEvXmoCaSIwLgLoy4qit3BNzhIFheON3rCb1vPXXgkMzPN2mAQfacHXC5buPSgoXzE+x4SpKJiVVOOlqwD+BCTAeynzXKqoWhtIqcDH8yLnCBrK+0eamGH0GRMTivQcnhJD+wsqxlIlpDbLQ8+q1OLZmZ3LiE3InHlrVjMfOuWBdPOpCk3yLqyQzRGOObwz1deM5e/Bhef0tYK21nLyrE0AKr1trXlCJOzYGE8DZCWqUCsA3CD/xQivBMk9tQDgXvW4yL+t3FwUgNCqzuGpjEijLbsW2IyBxxe0jCtApgAcInT4Tqm8ogBMrpGWsOL2p/w5UqGLz4vaCqAAFYnFaVHdq2irrvYWjayPmLDRWgA9eMGaJfdFgVAwBaHWybFXoHKfE9JjGxXLJJEeo6nnz2s8oONIELphQffyExByvPr3t+4C0lnAuhJdFYqFpefkyEzuzjrHjgh5XXAIQcTDknC8KwBRbadLkYcnZ6SBgUseWJdy+GUCJ3UnEpAMIOoA7kTBYxPaKtyhyx64R2gqupOyR1cjVlwydDFTzWMjJR6I01cEqEccPPb70KQHuhLC3LYIvwfb4WAzhLcGGf7EdPdQcU/WaEwmumeZTQCTDgKYWAMQ1OG5Q+A9Xyp0XNyJQDF+FA5/r9UZ4M2t0hi95RKnnU6TFgG3EQ08CDlw5WuQ0Z6N0D3cVnBH+vfc4hOg7QBQA5PI8KzJUPtQAAJErqjs8KiEc+byFzCGrG0LXb3IgctfBY81FaU4O2k3wm1znrAP+v+MoLs5sAfwI9j/AgwANf+08EIOu0wAAAAASUVORK5CYII=",
                "englishDescription": "",
                "datasets": [
                  590,
                  1562,
                  1343,
                  2180,
                  1561,
                  1641,
                  2605,
                  2939,
                  2179,
                  2196,
                  2362
                ],
                "services": [
                  106,
                  107
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Получение информации о категории",
        "description": "Получение информации о категории по её идентификатору",
        "operationId": "Categories_GetItemPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей, включённых в ответ запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryItem"
            },
            "examples": {
              "application/json": {
                "id": 9,
                "name": "Органы государственной власти",
                "englishName": "Public Authorities",
                "description": "",
                "icon": "iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABk9JREFUeNrsXU1y2kgUbqa8R3MCk6rZozkB8m52KCcAnyC6gfEJECcwPkHEbnYWNxD7qYo4QeAEnn6ur8NLR1IEqNstWa9KZew0SPr6/Xzv6xYZvL6+it4utz96CHoA39VuLnnT17/+6WTcf/7v30HvgX0I9wD2APbWA9gDKO1RHnfyuJfHsVM05kzby+O2xritPA44FpJS5Iw2BfLH7KN6YF7Tg3waK4GbE4gSNB/gjVwFzxaAE3nENcYN5eFJwGKAHuLvhz4HChER0ZfH5jfjyNO+4HWM7uCA8P7QAA7hVVHN8TGA66swM1UY7mrkRD3k05JxR3j1qstVWNmUCoMEMZU/CZAp/r5DnvPhqZsK79ND+SDHhig2CeVQfE6Ez+oUgGRERzJ4GL2OJADrGu+j9/wtx2ZlA2hi8DKRYNIELLsIoMdu1qv7Jjk+ueQ8XexEAkvnyboKYGzjJPDYfdcA3Nr0DEbEOwMgdSSJrZOh4Nx3CcC97bYMFd4oiDaqMJHdkNEMYwYuSDyQgFuDuKdt98DYBnisYyHp7EEe3ySga4DZagDnFqN2rbWJM+TeVgNojdSiBUwsTphxAI8WyfMP0aJLAEZV/ashL6TCsbF1PpNVeEc0QibyEJVRCQmJhaJCHc/UBoCDS7a31dwbs0P+K1pQIv1uYVI0BaWZnum9Tu2NGYvy1TiS7UkXNFlgImFhOdQkgHt42iO8sQhgYyAiF8YFRa0VABJgpD5TEaFQpRz4SfyqKI9NNv10bnFSZXbIw40uUN00DNqYtW6HAo8IpMdF6IlTvnhuOJQDmkzkxjmK2dAlADe40G+gLjlL5h64mY/+1IomyCaOikmC60jRrQR4PXQhhFcAh0Jxy9c42EV/YeqIdWPXQRGyFKeFJydy4AjVdlmgfMS4aGG6qa8JnrInhPHKBQBz5L8j70ML9rTk4n0swHWtCkSOq6+piRxI4fmIilfVk74LgCoHYlJ9ps7Mm2AATdGYB3gct1lBFX6PEB7R9jiAxyf10ERL2RSAR/GrXL/SbsS3mfeILskjBzN4QR48gNi/AdgEiW+Kxqw572OzPWdUwTMJGD5/hJxXtLVjCBADVOGpKzlQaDmGXme0Z0XbA2MCOKXwxKLeJswh8h5N7HdXeKDAhiFfnNYklAaYaXSnqZy2wP6XF0aO6/a5QZMq0E1TN4WQ1WfUvxZATIynhV5RPx3BEzNRvQ4ywWfW3bttJYRDDaCDBuDxHCKNfvWpoM8upVLQ8tbIh99/cwrVXj65UoUjdoOkRMeY5Vulgug0BqFIN5xzCgQFW7+xDGrOpgL0HOmEJu+5xjWnzoSwFgprBupRzzkAKGRJ/16BW+B5P0g4xoQoHBEvXmoCaSIwLgLoy4qit3BNzhIFheON3rCb1vPXXgkMzPN2mAQfacHXC5buPSgoXzE+x4SpKJiVVOOlqwD+BCTAeynzXKqoWhtIqcDH8yLnCBrK+0eamGH0GRMTivQcnhJD+wsqxlIlpDbLQ8+q1OLZmZ3LiE3InHlrVjMfOuWBdPOpCk3yLqyQzRGOObwz1deM5e/Bhef0tYK21nLyrE0AKr1trXlCJOzYGE8DZCWqUCsA3CD/xQivBMk9tQDgXvW4yL+t3FwUgNCqzuGpjEijLbsW2IyBxxe0jCtApgAcInT4Tqm8ogBMrpGWsOL2p/w5UqGLz4vaCqAAFYnFaVHdq2irrvYWjayPmLDRWgA9eMGaJfdFgVAwBaHWybFXoHKfE9JjGxXLJJEeo6nnz2s8oONIELphQffyExByvPr3t+4C0lnAuhJdFYqFpefkyEzuzjrHjgh5XXAIQcTDknC8KwBRbadLkYcnZ6SBgUseWJdy+GUCJ3UnEpAMIOoA7kTBYxPaKtyhyx64R2gqupOyR1cjVlwydDFTzWMjJR6I01cEqEccPPb70KQHuhLC3LYIvwfb4WAzhLcGGf7EdPdQcU/WaEwmumeZTQCTDgKYWAMQ1OG5Q+A9Xyp0XNyJQDF+FA5/r9UZ4M2t0hi95RKnnU6TFgG3EQ08CDlw5WuQ0Z6N0D3cVnBH+vfc4hOg7QBQA5PI8KzJUPtQAAJErqjs8KiEc+byFzCGrG0LXb3IgctfBY81FaU4O2k3wm1znrAP+v+MoLs5sAfwI9j/AgwANf+08EIOu0wAAAAASUVORK5CYII=",
                "englishDescription": "",
                "datasets": [
                  590,
                  1562,
                  1343,
                  2180,
                  1561,
                  1641,
                  2605,
                  2939,
                  2179,
                  2196,
                  2362
                ],
                "services": [
                  106,
                  107
                ]
              }
            }
          }
        }
      }
    },
    "/v1/categories/{id}/icon/bytes": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Получение byte[] иконки категории",
        "description": "Получение byte[] иконки категории по её идентификатору",
        "operationId": "Categories_GetItemIcon",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/classifiers": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников",
        "description": "Получение списка наборов данных или справочников",
        "operationId": "Datasets_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "foreign",
            "in": "query",
            "description": "Указание язычности наборов данных, true - возвращает англоязычные данные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников",
        "description": "Получение списка наборов данных или справочников",
        "operationId": "Datasets_GetListPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "foreign",
            "in": "query",
            "description": "Указание язычности наборов данных, true - возвращает англоязычные данные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      }
    },
    "/v1/datasets": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников",
        "description": "Получение списка наборов данных или справочников",
        "operationId": "Datasets_GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "foreign",
            "in": "query",
            "description": "Указание язычности наборов данных, true - возвращает англоязычные данные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников",
        "description": "Получение списка наборов данных или справочников",
        "operationId": "Datasets_GetListPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "foreign",
            "in": "query",
            "description": "Указание язычности наборов данных, true - возвращает англоязычные данные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      }
    },
    "/v1/departments/{departmentId}/classifiers": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданного департамента",
        "description": "Получение списка наборов данных или справочников, размещённых определённым департаментом",
        "operationId": "Datasets_GetListByDepartment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "Идентификатор департамента",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданного департамента",
        "description": "Получение списка наборов данных или справочников, размещённых определённым департаментом",
        "operationId": "Datasets_GetListByDepartmentPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "Идентификатор департамента",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      }
    },
    "/v1/departments/{departmentId}/datasets": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданного департамента",
        "description": "Получение списка наборов данных или справочников, размещённых определённым департаментом",
        "operationId": "Datasets_GetListByDepartment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "Идентификатор департамента",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданного департамента",
        "description": "Получение списка наборов данных или справочников, размещённых определённым департаментом",
        "operationId": "Datasets_GetListByDepartmentPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "Идентификатор департамента",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      }
    },
    "/v1/categories/{categoryId}/classifiers": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданной категории",
        "description": "Получение списка наборов данных или справочников, размещённых в определённой категории",
        "operationId": "Datasets_GetListByCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданной категории",
        "description": "Получение списка наборов данных или справочников, размещённых в определённой категории",
        "operationId": "Datasets_GetListByCategory",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/categories/{categoryId}/datasets": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданной категории",
        "description": "Получение списка наборов данных или справочников, размещённых в определённой категории",
        "operationId": "Datasets_GetListByCategory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DatasetListItem>"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение списка наборов данных или справочников для заданной категории",
        "description": "Получение списка наборов данных или справочников, размещённых в определённой категории",
        "operationId": "Datasets_GetListByCategory",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Идентификатор категории",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/classifiers/{id}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение структуры набора данных",
        "description": "Получение описания набора данных с указанием перечня атрибутов",
        "operationId": "Datasets_GetItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetItem"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение структуры набора данных",
        "description": "Получение описания набора данных с указанием перечня атрибутов",
        "operationId": "Datasets_GetItemPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetItem"
            }
          }
        }
      }
    },
    "/v1/datasets/{id}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение структуры набора данных",
        "description": "Получение описания набора данных с указанием перечня атрибутов",
        "operationId": "Datasets_GetItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetItem"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение структуры набора данных",
        "description": "Получение описания набора данных с указанием перечня атрибутов",
        "operationId": "Datasets_GetItemPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список возвращаемых полей в ответе запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetItem"
            }
          }
        }
      }
    },
    "/v1/classifiers/{datasetId}/version": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение актуальной версии набора данных",
        "description": "Получение объекта, содержащим номер актуальной версии и актуального релиза",
        "operationId": "Datasets_GetVersion",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetVersionItem"
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/version": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение актуальной версии набора данных",
        "description": "Получение объекта, содержащим номер актуальной версии и актуального релиза",
        "operationId": "Datasets_GetVersion",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetVersionItem"
            }
          }
        }
      }
    },
    "/v1/classifiers/{datasetId}/icon/{size}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение иконки датасета",
        "description": "Получение иконки датасета без цветовой подложки",
        "operationId": "Datasets_GetTransparentIcon",
        "consumes": [],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "path",
            "description": "Размер",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/icon/{size}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение иконки датасета",
        "description": "Получение иконки датасета без цветовой подложки",
        "operationId": "Datasets_GetTransparentIcon",
        "consumes": [],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "path",
            "description": "Размер",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/marker": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение маркера карты для набора данных",
        "description": "Получение маркера карты для набора данных",
        "operationId": "Datasets_GetMarker",
        "consumes": [],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/classifiers/{datasetId}/marker": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение маркера карты для набора данных",
        "description": "Получение маркера карты для набора данных",
        "operationId": "Datasets_GetMarker",
        "consumes": [],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/classifiers/{datasetId}/Image/{width}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение цветной иконки набора данных",
        "description": "Получение иконки набора данных с цветовой подложкой или без неё",
        "operationId": "Datasets_GetIcon",
        "consumes": [],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "width",
            "in": "path",
            "description": "Размер иконки",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transparent",
            "in": "query",
            "description": "При значениее true, подложка иконки будет отсутствовать",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/Image/{width}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение цветной иконки набора данных",
        "description": "Получение иконки набора данных с цветовой подложкой или без неё",
        "operationId": "Datasets_GetIcon",
        "consumes": [],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "width",
            "in": "path",
            "description": "Размер иконки",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transparent",
            "in": "query",
            "description": "При значениее true, подложка иконки будет отсутствовать",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/SocialImage": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение изображения набора данных для соц. сетей",
        "description": "Получение изображения набора данных, используемого в социальных сетях",
        "operationId": "Datasets_GetSocialImage",
        "consumes": [],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер иконки",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/classifiers/{datasetId}/SocialImage": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Получение изображения набора данных для соц. сетей",
        "description": "Получение изображения набора данных, используемого в социальных сетях",
        "operationId": "Datasets_GetSocialImage",
        "consumes": [],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Размер иконки",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Получение списка департаментов",
        "description": "Получение списка департаментов, которые размещают наборы данных на портале открытых данных города Москвы",
        "operationId": "Departments_GetDepartmentsList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DepartmentListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 6,
                    "name": "Департамент капитального ремонта города Москвы",
                    "description": "Департамент капитального ремонта города Москвы является функциональным органом исполнительной власти города Москвы, осуществляющим функции по разработке и реализации государственной политики в сфере капитального ремонта жилищного фонда, а также объектов нежилого фонда, прочих объектов недвижимости; государственного заказчика по размещению заказа на поставки товаров, оказание услуг, выполнение работ по капитальному ремонту объектов недвижимости, осуществляемых за счет средств бюджета города Москвы",
                    "websiteUrl": "http=//www.moskr.ru/",
                    "shortName": "ДКР",
                    "englishName": "Department for Major Housing Repairs",
                    "englishDescription": null,
                    "inn": "7710723399",
                    "datasets": [
                      1539,
                      1536,
                      1537,
                      1538,
                      1534
                    ]
                  },
                  {
                    "id": 7,
                    "name": "Департамент культурного наследия города Москвы",
                    "description": "Департамент культурного наследия города Москвы является отраслевым органом исполнительной власти города Москвы, осуществляющим= функции по формированию и реализации государственной политики в области государственной охраны, сохранения, использования и популяризации объектов культурного наследия (памятников истории и культуры) народов Российской Федерации (далее - объекты культурного наследия); функции по государственному контролю в области государственной охраны, сохранения, использования и популяризации объектов культурного наследия; полномочия в области государственной охраны объектов культурного наследия регионального значения, выявленных объектов культурного наследия; полномочия в области сохранения и популяризации объектов культурного наследия, выявленных объектов культурного наследия, находящихся в собственности города Москвы; переданные полномочия Российской Федерации по государственной охране объектов культурного наследия федерального значения, расположенных на территории города Москвы.",
                    "websiteUrl": "http=//dkn.mos.ru/",
                    "shortName": "ДКН",
                    "englishName": "Department for Cultural Heritage",
                    "englishDescription": null,
                    "inn": "7705021556",
                    "datasets": [
                      614,
                      613,
                      530,
                      2202,
                      2301
                    ]
                  }
                ],
                "count": 2
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Получение списка департаментов",
        "description": "Получение списка департаментов, которые размещают наборы данных на портале открытых данных города Москвы",
        "operationId": "Departments_GetDepartmentsListPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей, включённых в ответ запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "Принимает значение allpages для того, чтобы в ответе получить общее количество записей. По умолчанию общее количество записей не выводится.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultWithCount<DepartmentListItem>"
            },
            "examples": {
              "application/json": {
                "items": [
                  {
                    "id": 6,
                    "name": "Департамент капитального ремонта города Москвы",
                    "description": "Департамент капитального ремонта города Москвы является функциональным органом исполнительной власти города Москвы, осуществляющим функции по разработке и реализации государственной политики в сфере капитального ремонта жилищного фонда, а также объектов нежилого фонда, прочих объектов недвижимости; государственного заказчика по размещению заказа на поставки товаров, оказание услуг, выполнение работ по капитальному ремонту объектов недвижимости, осуществляемых за счет средств бюджета города Москвы",
                    "websiteUrl": "http=//www.moskr.ru/",
                    "shortName": "ДКР",
                    "englishName": "Department for Major Housing Repairs",
                    "englishDescription": null,
                    "inn": "7710723399",
                    "datasets": [
                      1539,
                      1536,
                      1537,
                      1538,
                      1534
                    ]
                  },
                  {
                    "id": 7,
                    "name": "Департамент культурного наследия города Москвы",
                    "description": "Департамент культурного наследия города Москвы является отраслевым органом исполнительной власти города Москвы, осуществляющим= функции по формированию и реализации государственной политики в области государственной охраны, сохранения, использования и популяризации объектов культурного наследия (памятников истории и культуры) народов Российской Федерации (далее - объекты культурного наследия); функции по государственному контролю в области государственной охраны, сохранения, использования и популяризации объектов культурного наследия; полномочия в области государственной охраны объектов культурного наследия регионального значения, выявленных объектов культурного наследия; полномочия в области сохранения и популяризации объектов культурного наследия, выявленных объектов культурного наследия, находящихся в собственности города Москвы; переданные полномочия Российской Федерации по государственной охране объектов культурного наследия федерального значения, расположенных на территории города Москвы.",
                    "websiteUrl": "http=//dkn.mos.ru/",
                    "shortName": "ДКН",
                    "englishName": "Department for Cultural Heritage",
                    "englishDescription": null,
                    "inn": "7705021556",
                    "datasets": [
                      614,
                      613,
                      530,
                      2202,
                      2301
                    ]
                  }
                ],
                "count": 2
              }
            }
          }
        }
      }
    },
    "/v1/departments/{id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Получение департамента",
        "description": "Получение департамента по его идентификатору",
        "operationId": "Departments_GetItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DepartmentItem"
            },
            "examples": {
              "application/json": {
                "id": 6,
                "name": "Департамент капитального ремонта города Москвы",
                "description": "Департамент капитального ремонта города Москвы является функциональным органом исполнительной власти города Москвы, осуществляющим функции по разработке и реализации государственной политики в сфере капитального ремонта жилищного фонда, а также объектов нежилого фонда, прочих объектов недвижимости; государственного заказчика по размещению заказа на поставки товаров, оказание услуг, выполнение работ по капитальному ремонту объектов недвижимости, осуществляемых за счет средств бюджета города Москвы",
                "websiteUrl": "http=//www.moskr.ru/",
                "shortName": "ДКР",
                "englishName": "Department for Major Housing Repairs",
                "englishDescription": null,
                "inn": "7710723399",
                "datasets": [
                  1539,
                  1536,
                  1537,
                  1538,
                  1534
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Получение департамента",
        "description": "Получение департамента по его идентификатору",
        "operationId": "Departments_GetItemPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей, включённых в ответ запроса",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DepartmentItem"
            },
            "examples": {
              "application/json": {
                "id": 6,
                "name": "Департамент капитального ремонта города Москвы",
                "description": "Департамент капитального ремонта города Москвы является функциональным органом исполнительной власти города Москвы, осуществляющим функции по разработке и реализации государственной политики в сфере капитального ремонта жилищного фонда, а также объектов нежилого фонда, прочих объектов недвижимости; государственного заказчика по размещению заказа на поставки товаров, оказание услуг, выполнение работ по капитальному ремонту объектов недвижимости, осуществляемых за счет средств бюджета города Москвы",
                "websiteUrl": "http=//www.moskr.ru/",
                "shortName": "ДКР",
                "englishName": "Department for Major Housing Repairs",
                "englishDescription": null,
                "inn": "7710723399",
                "datasets": [
                  1539,
                  1536,
                  1537,
                  1538,
                  1534
                ]
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/features": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "Получение строк указанного набора данных в формате GeoJSON",
        "description": "Запрос к ресурсу /datasets/{id}/features возвращает список строк указанного набора данных в формате GeoJSON. \r\nЕсли в запросе указать параметр bbox={bbox}, то в ответе будут отображаться объекты, находящиеся в заданном прямоугольнике координат. \r\nbbox - ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами (верхний левый угол и нижний правый угол прямоугольника).\r\n<para />\r\nВнимание: при запросе датасетов с количеством записей более 10000шт., в ответе будет передан статус 413. Получение таких датасетов возможно с применением описанного ниже параметра bbox. Для получения количества записей в датасете можно воспользоваться запросом <code>/datasets/{id}/count</code>.",
        "operationId": "Features_GetListByDatasetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          },
          "413": {
            "description": "RequestEntityTooLarge"
          }
        }
      },
      "post": {
        "tags": [
          "Features"
        ],
        "summary": "Получение строк указанного набора данных в формате GeoJSON",
        "description": "Запрос возвращает список строк указанного набора данных в формате GeoJSON. \r\nЕсли в запросе указать параметр bbox={bbox}, то в ответе будут отображаться объекты, находящиеся в заданном прямоугольнике координат. \r\nbbox - ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами (верхний левый угол и нижний правый угол прямоугольника).\r\n<para />\r\nВнимание: при запросе датасетов с количеством записей более 10000шт., в ответе будет передан статус 413. Получение таких датасетов возможно с применением описанного ниже параметра bbox. Для получения количества записей в датасете можно воспользоваться запросом <code>/datasets/{id}/count</code>.",
        "operationId": "Features_GetListByDatasetId",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей возвращаемых в ответе",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          },
          "413": {
            "description": "RequestEntityTooLarge"
          }
        }
      }
    },
    "/v1/features/{datasetId}": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "Получение строк указанного набора данных в формате GeoJSON",
        "description": "Запрос к ресурсу /datasets/{id}/features возвращает список строк указанного набора данных в формате GeoJSON. \r\nЕсли в запросе указать параметр bbox={bbox}, то в ответе будут отображаться объекты, находящиеся в заданном прямоугольнике координат. \r\nbbox - ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами (верхний левый угол и нижний правый угол прямоугольника).\r\n<para />\r\nВнимание: при запросе датасетов с количеством записей более 10000шт., в ответе будет передан статус 413. Получение таких датасетов возможно с применением описанного ниже параметра bbox. Для получения количества записей в датасете можно воспользоваться запросом <code>/datasets/{id}/count</code>.",
        "operationId": "Features_GetListByDatasetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          },
          "413": {
            "description": "RequestEntityTooLarge"
          }
        }
      },
      "post": {
        "tags": [
          "Features"
        ],
        "summary": "Получение строк указанного набора данных в формате GeoJSON",
        "description": "Запрос возвращает список строк указанного набора данных в формате GeoJSON. \r\nЕсли в запросе указать параметр bbox={bbox}, то в ответе будут отображаться объекты, находящиеся в заданном прямоугольнике координат. \r\nbbox - ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами (верхний левый угол и нижний правый угол прямоугольника).\r\n<para />\r\nВнимание: при запросе датасетов с количеством записей более 10000шт., в ответе будет передан статус 413. Получение таких датасетов возможно с применением описанного ниже параметра bbox. Для получения количества записей в датасете можно воспользоваться запросом <code>/datasets/{id}/count</code>.",
        "operationId": "Features_GetListByDatasetId",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "description": "Список полей возвращаемых в ответе",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          },
          "413": {
            "description": "RequestEntityTooLarge"
          }
        }
      }
    },
    "/v1/mapfeatures/{datasetId}": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "Получение строк указанного набора данных в формате GeoJSON",
        "description": "Запрос возвращает список строк указанного набора данных в кратком формате GeoJSON без подробных атрибутов набора данных. \r\nЕсли в запросе указать параметр bbox={bbox}, то в ответе будут отображаться объекты, находящиеся в заданном прямоугольнике координат. \r\nbbox - ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами (верхний левый угол и нижний правый угол прямоугольника).",
        "operationId": "Features_GetMapFeaturesByDatasetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowId",
            "in": "query",
            "description": "Идентиифкатор строки",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Возвращаемые поля",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          }
        }
      }
    },
    "/v1/mapfeatures/{datasetId}/typedFiltered": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "Получение строк указанного набора данных в формате GeoJSON",
        "description": "Запрос возвращает список строк указанного набора данных в кратком формате GeoJSON без подробных атрибутов набора данных. \r\nЕсли в запросе указать параметр bbox={bbox}, то в ответе будут отображаться объекты, находящиеся в заданном прямоугольнике координат. \r\nbbox - ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами (верхний левый угол и нижний правый угол прямоугольника).",
        "operationId": "Features_GetMapFeaturesByDatasetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rowId",
            "in": "query",
            "description": "Идентиифкатор строки",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Возвращаемые поля",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Ограничивающий прямоугольник (bounding box) заданный двумя географическими координатами",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "in": "query",
            "description": "",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          }
        }
      }
    },
    "/v1/map/{datasetId}/regions": {
      "get": {
        "tags": [
          "Features"
        ],
        "operationId": "Features_GetMapRegionsByDatasetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          }
        }
      }
    },
    "/v1/map/{datasetId}/districts": {
      "get": {
        "tags": [
          "Features"
        ],
        "operationId": "Features_GetMapDistrictsByDatasetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoJSON.Net.Feature.FeatureCollection"
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/count": {
      "get": {
        "tags": [
          "Rows"
        ],
        "operationId": "Rows_GetRowsCountByDatasetId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии набора данных",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/datasets/{datasetId}/rows": {
      "get": {
        "tags": [
          "Rows"
        ],
        "operationId": "Rows_GetListByDatasetId",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenData.API.Web.Controllers.ContractsList.ExampleRowItem"
            },
            "examples": {
              "application/json": [
                {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "global_id": 19368709,
                  "number": 2,
                  "cells": {
                    "global_id": 19368709,
                    "nameOfTariff": "«Единый» не более 2 поездок",
                    "ticketValidity": "5 дней, включая день продажи",
                    "numberOfZone": "-",
                    "tariffDistance": "-",
                    "typeOfTransport": "Метрополитен, монорельс, автобус, троллейбус, трамвай, МЦК",
                    "nameOfCarrier": [
                      {
                        "nameOfCarrier": "ГУП «Московский метрополитен»"
                      },
                      {
                        "nameOfCarrier": "ГУП «Мосгортранс»"
                      },
                      {
                        "nameOfCarrier": "ОАО «РЖД»"
                      }
                    ],
                    "ticketCost": 100,
                    "ticketZone": [
                      {
                        "ticketZone": "Зона А, Зона Б, между зонами А и Б"
                      }
                    ]
                  },
                  "lat": 0.0,
                  "lon": 0.0
                },
                {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "global_id": 19368713,
                  "number": 3,
                  "cells": {
                    "global_id": 19368713,
                    "nameOfTariff": "«Единый» не более 20 поездок",
                    "ticketValidity": "90 дней, включая день продажи",
                    "numberOfZone": "-",
                    "tariffDistance": "-",
                    "typeOfTransport": "Метрополитен, монорельс, автобус, троллейбус, трамвай, МЦК",
                    "nameOfCarrier": [
                      {
                        "nameOfCarrier": "ГУП «Московский метрополитен»"
                      },
                      {
                        "nameOfCarrier": "ГУП «Мосгортранс»"
                      },
                      {
                        "nameOfCarrier": "ОАО «РЖД»"
                      }
                    ],
                    "ticketCost": 650,
                    "ticketZone": [
                      {
                        "ticketZone": "Зона А, Зона Б, между зонами А и Б"
                      }
                    ]
                  },
                  "lat": 0.0,
                  "lon": 0.0
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rows"
        ],
        "operationId": "Rows_GetListByDatasetIdPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "datasetId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "versionNumber",
            "in": "query",
            "description": "Номер версии",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "releaseNumber",
            "in": "query",
            "description": "Номер релиза",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Фильтрация результате на условии истинности выражения. Поддерживает операторы протокола OData v2.0",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Указывает поле для сортировки результирующего списка. Пример: $orderby = \"Caption\", $orderby = \"Number desc.\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Ограничивает количество возвращаемых записей. Без указания данного параметра выводятся все записи.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Позволяет указать количество записей, которые следует пропустить в ответе.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpenData.API.Web.Controllers.ContractsList.ExampleRowItem"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "global_id": 19368709,
                  "number": 2,
                  "cells": {
                    "global_id": 19368709,
                    "nameOfTariff": "«Единый» не более 2 поездок",
                    "ticketValidity": "5 дней, включая день продажи",
                    "numberOfZone": "-",
                    "tariffDistance": "-",
                    "typeOfTransport": "Метрополитен, монорельс, автобус, троллейбус, трамвай, МЦК",
                    "nameOfCarrier": [
                      {
                        "nameOfCarrier": "ГУП «Московский метрополитен»"
                      },
                      {
                        "nameOfCarrier": "ГУП «Мосгортранс»"
                      },
                      {
                        "nameOfCarrier": "ОАО «РЖД»"
                      }
                    ],
                    "ticketCost": 100,
                    "ticketZone": [
                      {
                        "ticketZone": "Зона А, Зона Б, между зонами А и Б"
                      }
                    ]
                  },
                  "lat": 0.0,
                  "lon": 0.0
                },
                {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "global_id": 19368713,
                  "number": 3,
                  "cells": {
                    "global_id": 19368713,
                    "nameOfTariff": "«Единый» не более 20 поездок",
                    "ticketValidity": "90 дней, включая день продажи",
                    "numberOfZone": "-",
                    "tariffDistance": "-",
                    "typeOfTransport": "Метрополитен, монорельс, автобус, троллейбус, трамвай, МЦК",
                    "nameOfCarrier": [
                      {
                        "nameOfCarrier": "ГУП «Московский метрополитен»"
                      },
                      {
                        "nameOfCarrier": "ГУП «Мосгортранс»"
                      },
                      {
                        "nameOfCarrier": "ОАО «РЖД»"
                      }
                    ],
                    "ticketCost": 650,
                    "ticketZone": [
                      {
                        "ticketZone": "Зона А, Зона Б, между зонами А и Б"
                      }
                    ]
                  },
                  "lat": 0.0,
                  "lon": 0.0
                }
              ]
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/structure-{vsDate}(vs{versionNumber}).json": {
      "get": {
        "tags": [
          "Structure"
        ],
        "summary": "Json структура версии набора данных",
        "operationId": "Structure_GetItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Номер версии",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vsDate",
            "in": "path",
            "description": "Дата публикации версии",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetItem"
            }
          }
        }
      }
    },
    "/v1/opendata/{id}/structure-{vsDate}(vs{versionNumber}).json": {
      "get": {
        "tags": [
          "Structure"
        ],
        "summary": "Json структура версии набора данных",
        "operationId": "Structure_GetItem",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionNumber",
            "in": "path",
            "description": "Номер версии",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vsDate",
            "in": "path",
            "description": "Дата публикации версии",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetItem"
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/meta.json": {
      "get": {
        "tags": [
          "Structure"
        ],
        "summary": "Json-паспорт набора данных",
        "operationId": "Structure_GetPassport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetPassportData"
            }
          }
        }
      }
    },
    "/v1/opendata/{id}/meta.json": {
      "get": {
        "tags": [
          "Structure"
        ],
        "summary": "Json-паспорт набора данных",
        "operationId": "Structure_GetPassport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор набора данных",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatasetPassportData"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Получение актуальной версии API портала",
        "description": "Получение актуальной версии API портала",
        "operationId": "Versions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenData.API.Web.Controllers.Api.VersionInfo"
            }
          }
        }
      }
    },
    "/v1": {
      "get": {
        "tags": [
          "Versions"
        ],
        "summary": "Получение информации о версии",
        "description": "Получение информации о версии",
        "operationId": "Versions_GetVersion",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ResultWithCount<AppListItem>": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppListItem"
          }
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AppListItem": {
      "required": [
        "Id",
        "Caption",
        "Description",
        "CategoryId",
        "PublishDate",
        "Developer"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Идентификатор приложения",
          "type": "integer"
        },
        "Caption": {
          "description": "Наименование приложения",
          "type": "string"
        },
        "Description": {
          "description": "Описание приложения",
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Идентификатор категории",
          "type": "integer"
        },
        "PublishDate": {
          "description": "Дата размещения на портале",
          "type": "string"
        },
        "Developer": {
          "description": "Разработчик приложения",
          "type": "string"
        }
      }
    },
    "OpenData.API.Web.Controllers.ContractsList.AppRequestExample": {
      "type": "object",
      "properties": {}
    },
    "ApplicationItem": {
      "required": [
        "Id",
        "Caption",
        "Description",
        "CategoryId",
        "PublishDate",
        "Developer"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Идентификатор приложения",
          "type": "integer"
        },
        "Caption": {
          "description": "Наименование приложения",
          "type": "string"
        },
        "Description": {
          "description": "Описание приложения",
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Идентификатор категории",
          "type": "integer"
        },
        "PublishDate": {
          "description": "Дата размещения на портале",
          "type": "string"
        },
        "Developer": {
          "description": "Разработчик приложения",
          "type": "string"
        },
        "Icon": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ResultWithCount<CategoryListItem>": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryListItem"
          }
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CategoryListItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Идентификатор категории",
          "type": "integer"
        },
        "Name": {
          "description": "Наименование категории",
          "type": "string"
        },
        "EnglishName": {
          "description": "Англоязычное наименование категории",
          "type": "string"
        },
        "Description": {
          "description": "Описание категории",
          "type": "string"
        },
        "EnglishDescription": {
          "description": "Англоязычное описание категории",
          "type": "string"
        },
        "Datasets": {
          "description": "Список идентификаторов наборов данных, относящихся к данной категории",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Services": {
          "description": "Список сервисов, относящихся к данной категории",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "CategoryItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Идентификатор категории",
          "type": "integer"
        },
        "Name": {
          "description": "Наименование категории",
          "type": "string"
        },
        "EnglishName": {
          "description": "Англоязычное наименование категории",
          "type": "string"
        },
        "Description": {
          "description": "Описание категории",
          "type": "string"
        },
        "Icon": {
          "format": "byte",
          "type": "string"
        },
        "EnglishDescription": {
          "description": "Англоязычное описание категории",
          "type": "string"
        },
        "Datasets": {
          "description": "Список идентификаторов наборов данных, относящихся к данной категории",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Services": {
          "description": "Список сервисов, относящихся к данной категории",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "ResultWithCount<DatasetListItem>": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetListItem"
          }
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "DatasetListItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "VersionNumber": {
          "format": "int32",
          "description": "Номер актуальной версии",
          "type": "integer"
        },
        "ReleaseNumber": {
          "format": "int32",
          "description": "Номер актуального релиза",
          "type": "integer"
        },
        "Caption": {
          "description": "Наименование",
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Идентификатор категории",
          "type": "integer"
        },
        "DepartmentId": {
          "format": "int32",
          "description": "Идентификатор департамента",
          "type": "integer"
        },
        "PublishDate": {
          "description": "Дата размещения на ОПОДе",
          "type": "string"
        },
        "FullDescription": {
          "description": "Описание",
          "type": "string"
        },
        "Keywords": {
          "description": "Теги",
          "type": "string"
        },
        "ContainsGeodata": {
          "description": "Наличие геокоординат",
          "type": "boolean"
        },
        "ContainsAccEnvData": {
          "description": "НАличие \"доступной среды\"",
          "type": "boolean"
        },
        "IsForeign": {
          "description": "Флаг англоязычности",
          "type": "boolean"
        },
        "IsSeasonal": {
          "description": "Флаг сезонности",
          "type": "boolean"
        },
        "Season": {
          "description": "Сезонность набора",
          "type": "string"
        },
        "IsArchive": {
          "description": "Архивность набора",
          "type": "boolean"
        },
        "IsNew": {
          "description": "Размещение на портале произведено менее 7 дней",
          "type": "boolean"
        },
        "LastUpdateDate": {
          "description": "Дата последнего обновления",
          "type": "string"
        },
        "SefUrl": {
          "description": "SEF-ссылка",
          "type": "string"
        },
        "IdentificationNumber": {
          "description": "Идентификационный номер",
          "type": "string"
        }
      }
    },
    "DatasetItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Уникальный идентификатор",
          "type": "integer"
        },
        "IdentificationNumber": {
          "description": "Идентифифкационная строка",
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "description": "Идентификатор категории",
          "type": "integer"
        },
        "CategoryCaption": {
          "description": "Наименование категории",
          "type": "string"
        },
        "DepartmentId": {
          "format": "int32",
          "description": "Идентификатор департамента",
          "type": "integer"
        },
        "DepartmentCaption": {
          "description": "Наименование департамента",
          "type": "string"
        },
        "Caption": {
          "description": "Наименование набора данных",
          "type": "string"
        },
        "Description": {
          "description": "Краткое описание набора данных",
          "type": "string"
        },
        "FullDescription": {
          "description": "Полное описание набора данных",
          "type": "string"
        },
        "Keywords": {
          "description": "Теги набора",
          "type": "string"
        },
        "ContainsGeodata": {
          "description": "Наличие геокоординат",
          "type": "boolean"
        },
        "VersionNumber": {
          "description": "Номер актуальной версии",
          "type": "string"
        },
        "VersionDate": {
          "description": "Дата пубоикации версии",
          "type": "string"
        },
        "ItemsCount": {
          "format": "int64",
          "description": "Количество записей в наборе данных",
          "type": "integer"
        },
        "Columns": {
          "description": "Описание структуры набора данных",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnItem"
          }
        }
      }
    },
    "ColumnItem": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Наименование поля",
          "type": "string"
        },
        "Caption": {
          "description": "Заголоовк поля",
          "type": "string"
        },
        "Visible": {
          "description": "Видимость",
          "type": "boolean"
        },
        "Type": {
          "description": "Тип данных",
          "type": "string"
        },
        "SubColumns": {
          "description": "Дочерние поля",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnItem"
          }
        }
      }
    },
    "DatasetVersionItem": {
      "description": "Актуальные номера версии и релиза набора данных",
      "type": "object",
      "properties": {
        "versionNumber": {
          "format": "int32",
          "description": "Номер актуальной версии",
          "type": "integer"
        },
        "releaseNumber": {
          "format": "int32",
          "description": "Номер актуального релиза",
          "type": "integer"
        }
      }
    },
    "ResultWithCount<DepartmentListItem>": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepartmentListItem"
          }
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "DepartmentListItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Идентификтор департамента",
          "type": "integer"
        },
        "Name": {
          "description": "Наименование департамента",
          "type": "string"
        },
        "Description": {
          "description": "Описание департамента",
          "type": "string"
        },
        "WebsiteUrl": {
          "description": "ССылка на официальный сайт департамента",
          "type": "string"
        },
        "ShortName": {
          "description": "Сокращённое наименование департамента",
          "type": "string"
        },
        "EnglishName": {
          "description": "Англоязычное наименование",
          "type": "string"
        },
        "EnglishDescription": {
          "description": "Англоязычное описание",
          "type": "string"
        },
        "INN": {
          "description": "ИНН",
          "type": "string"
        },
        "Datasets": {
          "description": "Список идентификаторов наборов данных, размещённых департаментом",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "DepartmentItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Идентификтор департамента",
          "type": "integer"
        },
        "Name": {
          "description": "Наименование департамента",
          "type": "string"
        },
        "Description": {
          "description": "Описание департамента",
          "type": "string"
        },
        "WebsiteUrl": {
          "description": "ССылка на официальный сайт департамента",
          "type": "string"
        },
        "ShortName": {
          "description": "Сокращённое наименование департамента",
          "type": "string"
        },
        "EnglishName": {
          "description": "Англоязычное наименование",
          "type": "string"
        },
        "EnglishDescription": {
          "description": "Англоязычное описание",
          "type": "string"
        },
        "INN": {
          "description": "ИНН",
          "type": "string"
        },
        "Datasets": {
          "description": "Список идентификаторов наборов данных, размещённых департаментом",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "GeoJSON.Net.Feature.FeatureCollection": {
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJSON.Net.Feature.Feature"
          }
        },
        "bbox": {
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "crs": {
          "$ref": "#/definitions/GeoJSON.Net.CoordinateReferenceSystem.ICRSObject"
        },
        "type": {
          "enum": [
            "Point",
            "MultiPoint",
            "LineString",
            "MultiLineString",
            "Polygon",
            "MultiPolygon",
            "GeometryCollection",
            "Feature",
            "FeatureCollection"
          ],
          "type": "string"
        }
      }
    },
    "GeoJSON.Net.Feature.Feature": {
      "type": "object",
      "properties": {
        "geometry": {
          "$ref": "#/definitions/GeoJSON.Net.Geometry.IGeometryObject"
        },
        "id": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "bbox": {
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "crs": {
          "$ref": "#/definitions/GeoJSON.Net.CoordinateReferenceSystem.ICRSObject"
        },
        "type": {
          "enum": [
            "Point",
            "MultiPoint",
            "LineString",
            "MultiLineString",
            "Polygon",
            "MultiPolygon",
            "GeometryCollection",
            "Feature",
            "FeatureCollection"
          ],
          "type": "string"
        }
      }
    },
    "GeoJSON.Net.CoordinateReferenceSystem.ICRSObject": {
      "type": "object",
      "properties": {
        "Type": {
          "enum": [
            "Unspecified",
            "Name",
            "Link"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GeoJSON.Net.Geometry.IGeometryObject": {
      "type": "object",
      "properties": {
        "Type": {
          "enum": [
            "Point",
            "MultiPoint",
            "LineString",
            "MultiLineString",
            "Polygon",
            "MultiPolygon",
            "GeometryCollection",
            "Feature",
            "FeatureCollection"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OpenData.API.Web.Controllers.ContractsList.ExampleRowItem": {
      "required": [
        "Number",
        "Cells"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Идентификатор строки",
          "type": "string"
        },
        "global_id": {
          "format": "int64",
          "description": "Глобальный идентификатор объекта",
          "type": "integer"
        },
        "Number": {
          "format": "int64",
          "description": "Номер строки",
          "type": "integer"
        },
        "Cells": {
          "description": "Значения строки по столбцам специфкации",
          "type": "object"
        },
        "Lat": {
          "format": "double",
          "description": "Координаты долготы",
          "type": "number"
        },
        "Lon": {
          "format": "double",
          "description": "Координаты широты",
          "type": "number"
        }
      }
    },
    "DatasetPassportData": {
      "type": "object",
      "properties": {
        "Standardversion": {
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Identifier": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "CategoryCaption": {
          "type": "string"
        },
        "CreatorId": {
          "format": "int32",
          "type": "integer"
        },
        "Creator": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "VersionNumber": {
          "type": "string"
        },
        "Valid": {
          "type": "string"
        },
        "Modified": {
          "type": "string"
        },
        "Provenance": {
          "type": "string"
        },
        "ProvenanceEng": {
          "type": "string"
        },
        "Subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Structure": {
          "type": "string"
        },
        "Publisher": {
          "type": "object"
        },
        "Created": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VersionPassportData"
          }
        }
      }
    },
    "VersionPassportData": {
      "type": "object",
      "properties": {
        "VersionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "ReleaseNumber": {
          "format": "int32",
          "type": "integer"
        },
        "Source": {
          "type": "string"
        },
        "Created": {
          "type": "string"
        },
        "Provenance": {
          "type": "string"
        },
        "Valid": {
          "type": "string"
        },
        "Structure": {
          "type": "string"
        }
      }
    },
    "OpenData.API.Web.Controllers.Api.VersionInfo": {
      "required": [
        "Version"
      ],
      "type": "object",
      "properties": {
        "Version": {
          "format": "int32",
          "description": "Номер актуальной версии Api",
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "API Key Authentication",
      "name": "apiKey",
      "in": "query"
    }
  }
}